import React, { useState, useRef } from "react";
import Button from "../button/button"; 
import { Icons } from "../../ui/icons/Icons";

type MessageType = {
  id: number;
  text: string;
  sender: "user" | "bot";
  link: string | null;
};

const initialMessages: MessageType[] = [
  { id: 1, text: "–ü—Ä–∏–≤–µ—Ç, –ø–æ–¥—Å–∫–∞–∂–∏ –º–Ω–µ —Å–∞–º—ã–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ –Ω–∏—à–∏ –≤ —Å—Ç–∞—Ä—Ç–∞–ø–µ", sender: "user", link: null },
  {
    id: 2,
    text: `–ü—Ä–∏–≤–µ—Ç! –í–æ—Ç **—Ç–æ–ø-3 —Å–∞–º—ã–µ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–µ –Ω–∏—à–∏ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –≤ 2025 –≥–æ–¥—É**, –∏—Å—Ö–æ–¥—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π —Ä—ã–Ω–∫–∞:

---

### üîπ 1. **AI-—Å–µ—Ä–≤–∏—Å—ã –¥–ª—è B2B**
**–ü–æ—á–µ–º—É –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–æ:** –ë–∏–∑–Ω–µ—Å—ã –∞–∫—Ç–∏–≤–Ω–æ –≤–Ω–µ–¥—Ä—è—é—Ç –ò–ò –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã:
- –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞, email-–æ—Ç–≤–µ—Ç–æ–≤, —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è
- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —á–∞—Ç-–±–æ—Ç—ã –∏ –∞–≥–µ–Ω—Ç—ã

**–ü—Ä–∏–º–µ—Ä:** —Å–µ—Ä–≤–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Å –ø–æ–º–æ—â—å—é –ò–ò –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è/–æ—Ç–≤–µ—Ç—ã.

---

### üîπ 2. **–ó–¥–æ—Ä–æ–≤—å–µ –∏ Digital Health**
**–ü–æ—á–µ–º—É –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–æ:** –õ—é–¥–∏ –≤—Å—ë –±–æ–ª—å—à–µ –∑–∞–±–æ—Ç—è—Ç—Å—è –æ –∑–¥–æ—Ä–æ–≤—å–µ, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ –æ–Ω–ª–∞–π–Ω–µ.
- –ú–æ–±–∏–ª—å–Ω—ã–µ —Ç—Ä–µ–∫–µ—Ä—ã –∑–¥–æ—Ä–æ–≤—å—è
- –£–º–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∏ –æ –ø—Ä–∏—ë–º–µ –ª–µ–∫–∞—Ä—Å—Ç–≤
- –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —á–µ—Ä–µ–∑ —á–∞—Ç/–≤–∏–¥–µ–æ

**–ü—Ä–∏–º–µ—Ä:** –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å –ò–ò-–∞–Ω–∞–ª–∏–∑–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è.

---

### üîπ 3. **EdTech —Å –ò–ò**
**–ü–æ—á–µ–º—É –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–æ:** –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏ –≥–∏–±–∫–∏–º.
- –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º –æ–±—É—á–µ–Ω–∏–µ–º
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤ –∏ –∫—É—Ä—Å–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò
- –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ —É—á–∏—Ç–µ–ª–µ–π

**–ü—Ä–∏–º–µ—Ä:** –ò–ò-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, —Å–æ–∑–¥–∞—é—â–∞—è –∫—É—Ä—Å—ã –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ 5 –º–∏–Ω—É—Ç.

---

–•–æ—á–µ—à—å, –≤—ã–≥—Ä—É–∂—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–º –Ω–∏—à–∞–º –≤ —Å—Ç–∞—Ä—Ç–∞–ø–µ`,
    sender: "bot",
    link: null,
  },
  { id: 3, text: "–î–∞, —Å–∫–∏–Ω—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ç–æ–ø 3 –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∏—à –≤ —Å—Ç–∞—Ä—Ç–∞–ø–µ", sender: "user", link: null },
  { id: 4, text: "–ö–æ–Ω–µ—á–Ω–æ! –í–æ—Ç –∞–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç—Ä—ë–º –Ω–∞–∏–±–æ–ª–µ–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–º –Ω–∏—à–∞–º –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –≤ 2025 –≥–æ–¥—É:", sender: "bot", link: "/trends" },
];

const ChatComponent: React.FC = () => {
  const [messages, setMessages] = useState<MessageType[]>(initialMessages);
  const [message, setMessage] = useState<string>(""); 
  const [isLoading, setIsLoading] = useState<boolean>(false); 
  const textareaRef = useRef<HTMLTextAreaElement>(null);

  const handleInput = () => {
    if (textareaRef.current) {
      textareaRef.current.style.height = "auto";
      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;
    }
  };

  const sendMessage = () => {
    if (message.trim()) {
      setIsLoading(true);

      const newMessage: MessageType = {
        id: Date.now(),
        text: message.trim(),
        sender: "user",
        link: null,
      };

      setMessages((prev) => [...prev, newMessage]);

      setTimeout(() => {
        const botReply: MessageType = {
          id: Date.now() + 1,
          text: `–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! üöÄ –Ø –µ–≥–æ –ø–æ–ª—É—á–∏–ª: "${message.trim()}"`,
          sender: "bot",
          link: null,
        };

        setMessages((prev) => [...prev, botReply]);
        setIsLoading(false);
        setMessage("");
        if (textareaRef.current) {
          textareaRef.current.style.height = "auto";
        }
      }, 2000);
    }
  };

  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      sendMessage();
    }
  };

  return (
    <div className="flex flex-col h-screen">
      <div className="bg-gray-100 p-4 text-lg font-semibold text-center rounded-b-md">
        üí¨ –ß–∞—Ç —Å AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
      </div>

      <div className="flex-1 overflow-y-auto p-4 space-y-4">
        {messages.map((msg) => (
          <div
            key={msg.id}
            className={`p-3 rounded-md max-w-lg ${
              msg.sender === "user" ? "bg-blue-200 self-end" : "bg-gray-300 self-start"
            }`}
          >
            <div className="whitespace-pre-wrap">{msg.text}</div>
            {msg.link && (
              <a href={msg.link} className="text-blue-600 underline text-sm">
                –ü–µ—Ä–µ–π—Ç–∏
              </a>
            )}
          </div>
        ))}
        {isLoading && (
          <div className="text-sm text-gray-500 animate-pulse">–ë–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç...</div>
        )}
      </div>

      {/* –ù–ï –¢–†–û–ì–ê–ù–ù–ê–Ø –ß–ê–°–¢–¨ */}
      <div className="p-8 rounded-t-xl shadow-2xl">
        <div className="flex space-x-3">
          <div>
            <textarea
              ref={textareaRef}
              placeholder="–°–ø—Ä–æ—Å–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å..."
              value={message}
              onChange={(e) => {
                setMessage(e.target.value);
                handleInput();
              }}
              onKeyDown={handleKeyDown}
              className="flex-1 px-4 text-sm p-2 w-[500px] bg-gary-300 rounded-md resize-none focus:outline-none overflow-y-auto"
              style={{ minHeight: "50px", maxHeight: "150px" }}
            />
          </div>
          <Button
            variant="ghost"
            onClick={sendMessage}
            isLoading={isLoading}
            disabled={isLoading || !message.trim()}
            className="flex w-5 h-5 bg-transparent p-3 rounded-md"
          >
            <Icons.send className="w-6 h-6 text-gray-500" />
          </Button>
        </div>
      </div>
    </div>
  );
};

export default ChatComponent;
